---
- name: Install ZSH
  become: true
  ansible.builtin.apt:
    name:
      - zsh
  tags: &tags_for_zsh_tasks ["core", "zsh"]

- name: Change shell to zsh
  become: true
  ansible.builtin.shell: chsh --shell $(which zsh) {{ ansible_user }}
  changed_when: true
  tags: *tags_for_zsh_tasks

- name: Check that the oh-my-zsh exists
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.config/zsh/ohmyzsh"
  register: oh_my_stats
  tags: *tags_for_zsh_tasks

- name: Oh-My-Zsh
  ansible.builtin.shell: |
    source {{ ansible_env.HOME }}/.bashrc
    bash -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
  changed_when: true
  tags: *tags_for_zsh_tasks
  when: not oh_my_stats.stat.exists

- name: Install autosuggestions
  ansible.builtin.shell: |
    source {{ ansible_env.HOME }}/.bashrc
    PLUGIN_DIR="$ZSH/custom/plugins/{{ item }}"
    if [[ -d "$PLUGIN_DIR" ]]; then
      cd "$PLUGIN_DIR" && git pull
    else
      git clone "https://github.com/zsh-users/{{ item }}" "$PLUGIN_DIR"
    fi
  changed_when: true
  loop:
    - zsh-autosuggestions
    - zsh-syntax-highlighting
    - zsh-completions
    - zsh-history-substring-search
  tags: *tags_for_zsh_tasks
  when: not oh_my_stats.stat.exists

- name: Install Starship
  become: true
  ansible.builtin.shell: |
    set -o pipefail
    curl -sS https://starship.rs/install.sh | sh -s -- -y
  changed_when: true
  args:
    executable: /bin/bash
  tags: *tags_for_zsh_tasks

- name: Set global ZDOTDIR
  become: true
  ansible.builtin.blockinfile:
    state: present
    insertafter: EOF
    dest: /etc/zsh/zshenv
    content: |
      if [[ -d "$HOME/.config/zsh" ]]; then
        export ZDOTDIR=$HOME/.config/zsh
        export SYSTEM_TYPE="{{ SYSTEM_TYPE | default('') }}"
      fi
  tags: *tags_for_zsh_tasks
